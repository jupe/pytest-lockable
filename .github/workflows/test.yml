on:
  push:
    branches: [ "master" ]
    tags:
      - v*
  pull_request:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install .[dev]
        pip install .[optional]
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
    - name: pylint
      run: pylint pytest_lockable
    - name: Build coverage file
      run: |
          python3 -m coverage run --source pytest_lockable -m xmlrunner discover -s tests --output-file results.xml
          python3 -m coverage xml -o coverage.xml
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: run example
      working-directory: example
      run: |
        pytest --allocation_hostname localhost -s --allocation_lock_folder .
    - name: install release deps
      if: startsWith(github.ref, 'refs/tags/v') && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      run: |
        pip install wheel twine
        python setup.py sdist
        python setup.py bdist_wheel
    - name: upload to pypi
      if: startsWith(github.ref, 'refs/tags/v') && matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      env:
        TWINE_USERNAME: "${{secrets.TWINE_USERNAME}}"
        TWINE_PASSWORD: "${{secrets.TWINE_PASSWORD}}"
      run: |
          export PATH=$HOME/.local/bin:$PATH;
          twine upload dist/*
